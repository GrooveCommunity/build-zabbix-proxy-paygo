name: Build and Deploy Image

on:
  push:
    branches:
    - '**'

env:
  PROJECT_ID: ${{ secrets.GKE_NOC_PROJECT }}
  GKE_REGION: us-central1
  GKE_CLUSTER: noc
  IMAGE: zabbix-proxy-paygo
  APP_PORT: 8379
  VERSION: 1.3.2
  MAIN_REPO_NAME: zabbix-proxy-paygo
  DEP_STRUCTS_REPO_NAME: glib-noc-event-structs
  DEP_STORAGE_REPO_NAME: glib-cloud-storage

jobs:
  build_and_deploy_docker:
    name: Build and Deploy Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_NOC_SA_KEY }}
        project_id: ${{ secrets.GKE_NOC_PROJECT }}

    - name: Configure Docker 
      run: |-
        gcloud --quiet auth configure-docker
  
    - name: Build Docker Image
      run: |-
        docker build --build-arg APP_PORT=${{ env.APP_PORT }} --build-arg MAIN_REPO_NAME=${{ env.MAIN_REPO_NAME }} --build-arg DEP_STRUCTS_REPO_NAME=${{ env.DEP_STRUCTS_REPO_NAME }} --build-arg DEP_STORAGE_REPO_NAME=${{ env.DEP_STORAGE_REPO_NAME }} --tag "gcr.io/$PROJECT_ID/$IMAGE:${{ env.VERSION }}.${{ steps.vars.outputs.sha_short }}" .
    
    - name: Deploys Docker Image
      run: |
        docker push "gcr.io/$PROJECT_ID/$IMAGE:${{ env.VERSION }}.${{ steps.vars.outputs.sha_short }}"
    
  deploy_k8s:
    name: Deploy Pod and Service
    runs-on: ubuntu-latest
    needs: build_and_deploy_docker

    steps:
    - name: Checkout
      uses: actions/checkout@v2
  
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_NOC_SA_KEY }}
        project_id: ${{ secrets.GKE_NOC_PROJECT }}
        
    - name: Get The GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --region us-central1

    - name: Create IP Load Balancer
      run: |-
        gcloud compute addresses create lb-zabbix-proxy --global 
      continue-on-error: true

    - name: Replace image tag and APP PORT
      run: |-
        sed -i 's/APP_PORT/${{ env.APP_PORT }}/g' deployment.yml
        sed -i 's/TAG_IMAGE/${{ env.VERSION }}.${{ steps.vars.outputs.sha_short }}/g' deployment.yml
    
    - name: Replace env from secrets
      run: |-
        sed -i 's/PROJECT_ID_ENV/${{ secrets.GKE_NOC_PROJECT }}/g' deployment.yml
        sed -i 's/TOPIC_ID_METRICS_ENV/${{ secrets.TOPIC_ID_METRICS }}/g' deployment.yml
    
    - name: Create deployment 
      run: |-
        kubectl apply -f deployment.yml -n paygo 

    - name: Replace APP PORT
      run: |-
        sed -i 's/APP_PORT/${{ env.APP_PORT }}/g' service.yml
        sed -i 's/APP_PORT/${{ env.APP_PORT }}/g' ingress.yml

    - name: Create cert
      run: |-
        kubectl apply -f certificate.yml -n paygo

    - name: Service deploy
      run: |-
        kubectl apply -f service.yml -n paygo

    - name: Ingress deploy
      run: |-
        kubectl apply -f ingress.yml -n paygo
